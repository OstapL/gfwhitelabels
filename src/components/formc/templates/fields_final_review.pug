- var formatHelper = require('helpers/formatHelper.js');

- function ggetData(name) {
-   if(name.indexOf('.') == -1) {
-       return values[name];                                                           
-   } else {
-       try {
-           return name.split('.').reduce(function(o,i) {
-                if(i.indexOf('[') != -1) { 
-                    i = i.split('['); k = i[0]; i = i[1].replace(']', ''); return o[k][i];
-                }
-                return o[i];
-            }, values);
-       } catch(e) { 
-           console.log('no name ' + name); return ''; 
-       }
-   }                                                                              
- }

mixin frprepareNestedField(nestedName, name, value, index, myAttr)
  if value == null
    - console.log('value for ' + name + ' is null ')
    - value = {}
  - _.extend(myAttr, attr.schema[name]);
  - myAttr.value = value[name] ? value[name]: '';
  - myAttr.id = nestedName + '__' + index + '__' + name + '';


mixin frfieldNestedTextLabel(nestedName, name, value, index, myAttr)
  +prepareNestedField(nestedName, name, value, index, myAttr)
  - myAttr.class1 = myAttr.class1 ? myAttr.class1 : 'text-lg-right col-lg-3 col-md-12 text-md-left';
  - myAttr.class2 = myAttr.class2 ? myAttr.class2 : 'col-lg-9 col-md-12';
  +fieldTextLabel(
    nestedName + '[' + index + '][' + name + ']',
    myAttr
  )


mixin frField(name, type)
  - var value = ggetData(name)
  if type == 'select'
    - var schemaName = name;
    if name.indexOf('[') !== -1
      - schemaName = name.replace(/\[\d+\]/, '.schema')
    if schemaName.indexOf('[') !== -1
      - schemaName = schemaName.split('[')[0];
    - var valuesList = schemaName.split('.').reduce(function(o,i) { return o[i]; }, fields);
    if valuesList && valuesList.validate && valuesList.validate.OneOf
      - valuesList = valuesList.validate.OneOf;
      if valuesList.labels
        if valuesList.choices.indexOf(value.toString()) != -1
          - value = valuesList.labels[valuesList.choices.indexOf(value.toString())]
        else
          - value = valuesList.labels[valuesList.choices.indexOf(parseFloat(+value))]
  if type == 'textarea'
    - value = value.replace(/\n/g, "<br />")
  if type == 'money'
    - value = formatHelper.formatPrice(value)
  a(
    href="#"
    data-name=name
    data-type=type || 'text'
    data-value=(type == 'select' ? ggetData(name) : " ")
    ).createField.show-input.link-1 !{ value }
