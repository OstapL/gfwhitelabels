- pug_html += app.breadcrumbs('Established Business Valuation Calculator', 'Step 2', [ ['Home', '/'], ["What's My Business Worth?", '/calculator/BusinessValuation'], ["Established Business Valuation Calculator", ''],]);

.container.calculator-container
  .row
    .offset-lg-1.col-lg-10
      ul.list-inline.top-breadcrambs.mb45.established-business
        li
          a(href="/calculator/establishedBusiness/intro").btn
            h4.text-uppercase.m-b-0 Intro
        li
          a(href="/calculator/establishedBusiness/step-1").btn
            h4.text-uppercase.m-b-0 step 1
        li
          a(href="/calculator/establishedBusiness/step-2").current.btn
            h4.text-uppercase.m-b-0 step 2
        li
          a(href="/calculator/establishedBusiness/step-3").next.btn
            h4.text-uppercase.m-b-0 step 3
        li
          a(href="/calculator/establishedBusiness/finish").next.btn
            h4.text-uppercase.m-b-0 Finish

  .row
    .offset-lg-3.col-lg-6
      .warning-block
        i.fa.fa-exclamation-triangle 
        span.warning-text For 
          b the last twelve months, 
          |  please enter the following information about your business

  .row
    .offset-lg-3.col-lg-6
      form(method="post" action="").form-section
        .form-body.clearfix
          .form-group.row
            label(for="revenue").col-lg-12.font-weight-normal Revenue

            .col-lg-12
              input(
                value= formatPrice(data.revenue),
                type='text',
                placeholder='Revenue',
                autocomplete='off'
                data-input-mask='price',
                data-model-value='revenue',
                name="revenue",
                data-current-value= data.revenue)#revenue.form-control.js-field

          .form-group.row
            label(for="goodsCost").col-lg-12.font-weight-normal Cost of Goods Sold

            .col-lg-12
              input(
                value= formatPrice(data.goodsCost),
                type='text',
                placeholder='Cost of Goods Sold',
                autocomplete='off'
                data-input-mask='price',
                data-model-value='goodsCost',
                name="goodsCost",
                data-current-value= data.goodsCost)#goodsCost.form-control.js-field

          .form-group.row
            label(for="operatingExpense").col-lg-12.font-weight-normal SG&A, and other Operating Expenses&nbsp;&nbsp;
              div.d-inline-block
                div.showPopover(data-content="<u>Selling, General & Administrative Operating Expense.</u> The sum of all direct and indirect selling expenses and all general and administrative expenses of a company")
                  i(aria-hidden="true").fa.fa-question-circle.text-muted

            .col-lg-12
              input(
                value= formatPrice(data.operatingExpense),
                type='text',
                placeholder='SG&A Operating Expense',
                autocomplete='off'
                data-input-mask='price',
                data-model-value='operatingExpense',
                name="operatingExpense",
                data-current-value= data.operatingExpense)#operatingExpense.form-control.js-field

          .form-group.row
            label(for="oneTimeExpenses").col-lg-12.font-weight-normal One Time (Extraordinary) Expenses&nbsp;&nbsp;
              div.d-inline-block
                div.showPopover(data-content="<u>One Time (Extraordinary) Expenses.</u> A rare, infrequent event which financial analysts separate out of the income statement in order to avoid distorting the 'regular' earnings reported by a company. They can include things like adverse legal, regulatory or tax issues, storm damage or restructuring charges.")
                  i(aria-hidden="true").fa.fa-question-circle.text-muted

            .col-lg-12
              input(
                value= formatPrice(data.oneTimeExpenses),
                type='text',
                placeholder='One Time (Extraordinary) Expenses',
                autocomplete='off'
                data-input-mask='price',
                data-model-value='oneTimeExpenses',
                name="oneTimeExpenses",
                data-current-value= data.oneTimeExpenses)#oneTimeExpenses.form-control.js-field

          .form-group.row
            label(for="depreciationAmortization").col-lg-12.font-weight-normal Depreciation  & Amortization&nbsp;&nbsp;
              div.d-inline-block
                div.showPopover(data-content="<u>Depreciation</u><br/>The allocation of the cost of assets to periods in which the assets are used.<br/><br/><u>Amoritization</u><br/>To write off the cost of an asset gradually.")
                  i(aria-hidden="true").fa.fa-question-circle.text-muted


            .col-lg-12
              input(
                value= formatPrice(data.depreciationAmortization),
                type='text',
                placeholder='Depreciation & Amortization',
                autocomplete='off'
                data-input-mask='price',
                data-model-value='depreciationAmortization',
                name="depreciationAmortization"
                data-current-value= data.depreciationAmortization)#depreciationAmortization.form-control.js-field

          .form-group.row
            label(for="interestPaid").col-lg-12.font-weight-normal Interest Paid

            .col-lg-12
              input(
                value= formatPrice(data.interestPaid),
                type='text',
                placeholder='Interest Paid',
                autocomplete='off'
                data-input-mask='price',
                data-model-value='interestPaid',
                name="interestPaid",
                data-current-value= data.interestPaid)#interestPaid.form-control.js-field

          .form-group.row
            label(for="taxesPaid").col-lg-12.font-weight-normal Taxes Paid

            .col-lg-12
              input(
                value= formatPrice(data.taxesPaid),
                type='text',
                placeholder='Taxes Paid',
                autocomplete='off'
                data-input-mask='price',
                data-model-value='taxesPaid',
                name="taxesPaid"
                data-current-value= data.taxesPaid)#taxesPaid.form-control.js-field

          .form-group.row.clearfix.m0
            .col-xs-6.p-t-2.m-t-1
              a(href='/calculator/establishedBusiness/step-1').link-3 Go back

            .col-xs-6.mt30
              .controls
                button.btn.btn-primary.pull-right.text-uppercase Next
                // add class .pointer-events-none to disable all events for this button
